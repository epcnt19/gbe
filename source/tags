!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
FLAGS_CARRY	cpu.cpp	18;"	d	file:
FLAGS_CLEAR	cpu.cpp	21;"	d	file:
FLAGS_HALFCARRY	cpu.cpp	17;"	d	file:
FLAGS_SET	cpu.cpp	20;"	d	file:
FLAGS_SUBTRACT	cpu.cpp	16;"	d	file:
FLAGS_ZERO	cpu.cpp	15;"	d	file:
backgroundPalette	screen.cpp	/^struct rgb backgroundPalette[4];$/;"	v	typeref:struct:rgb
copy	memory.cpp	/^void copy(unsigned short destination,unsigned short source,size_t length){$/;"	f
cp_n	cpu.cpp	/^void cp_n(unsigned char operand){$/;"	f
cpuEmulation	cpu.cpp	/^void cpuEmulation(void){$/;"	f
gpu	screen.cpp	/^struct gpu gpu;$/;"	v	typeref:struct:gpu
hram	memory.cpp	/^unsigned char hram[0x80];$/;"	v
instructions	cpu.cpp	/^struct instruction instructions[] = {$/;"	v	typeref:struct:instruction
interrupt	cpu.cpp	/^struct interrupt interrupt;$/;"	v	typeref:struct:interrupt
io	memory.cpp	/^unsigned char io[0x100];$/;"	v
ioReset	memory.cpp	/^unsigned char ioReset[0x100] = {$/;"	v
jp_nn	cpu.cpp	/^void jp_nn(unsigned short operand){$/;"	f
keys	input.cpp	/^struct keys keys;$/;"	v	typeref:struct:keys
ldh_a_n	cpu.cpp	/^void ldh_a_n(unsigned char operand){$/;"	f
loadRom	memory.cpp	/^int loadRom(char *romfilePath){$/;"	f
main	main.cpp	/^int main(void){$/;"	f
nop	cpu.cpp	/^void nop(void){$/;"	f
oam	memory.cpp	/^unsigned char oam[0x100];$/;"	v
palette	screen.cpp	/^const struct rgb palette[4] = {$/;"	v	typeref:struct:rgb
quit	main.cpp	/^void quit(void){$/;"	f
readByte	memory.cpp	/^unsigned char readByte(unsigned short address){$/;"	f
readShort	memory.cpp	/^unsigned short readShort(unsigned short address){$/;"	f
regs	cpu.cpp	/^struct registers regs;$/;"	v	typeref:struct:registers
reset	cpu.cpp	/^void reset(void){$/;"	f
romData	memory.cpp	/^unsigned char romData[0x8000];$/;"	v
romTypeString	memory.cpp	/^char *romTypeString[] = {$/;"	v
romfilePath	main.cpp	/^char* romfilePath = "..\/rom\/Tetris.gb";$/;"	v
spritePalette	screen.cpp	/^struct rgb spritePalette[2][4];$/;"	v	typeref:struct:rgb
sram	memory.cpp	/^unsigned char sram[0x2000];$/;"	v
tiles	screen.cpp	/^unsigned char tiles[384][8][8];$/;"	v
updateTile	screen.cpp	/^void updateTile(unsigned short address, unsigned char value) {$/;"	f
vram	memory.cpp	/^unsigned char vram[0x2000];$/;"	v
wram	memory.cpp	/^unsigned char wram[0x200];$/;"	v
writeByte	memory.cpp	/^void writeByte(unsigned char address,unsigned char value){$/;"	f
